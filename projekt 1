import numpy as np
import math

class Vector2D():
    #inicjalizacja
    def __init__(self, x, y):
        self.x = x
        self.y = y
    #wyswietlanie danych
    def display(self):
        print("x="+str(self.x)+", y="+str(self.y))
   #dodwanie wektorów
    def add(self, other):
        self.x = self.x + other.x
        self.y = self.y + other.y
        suma = self.x,self.y
        return suma
   #odejmowanie wektorów  
    def substr(self, other):
        self.x = self.x - other.x
        self.y = self.y - other.y
        roznica = self.x,self.y
        return roznica
  #mnożenie wektrów przez liczbe  
    def multByNumber(self, a):
        self.x = a*self.x
        self.y = a*self.y
        iloczyn = self.x,self.y
        return iloczyn
  #mnożenie skalarnie    
    def dotProd(self, other):
        return self.x*other.x + self.y*other.y 
  #obracanie wektora o kąt
    def rotate(self, alfa):
        alfaDeg = alfa*math.pi/180
        sinus = math.sin(alfaDeg)
        cosinus = math.cos(alfaDeg)
        x = self.x
        y = self.y       
        self.x = x*cosinus - y*sinus
        self.y = x*sinus + y*cosinus
        route = self.x,self.y
        return route
   #moduł     
    def modulus(self):
        return (self.x**2 + self.y**2)**0.5
  #wekotry przeciwne
    def opposite(self):
        self.x = -self.x
        self.y = -self.y
        przeciwne = self.x,self.y
        return przeciwne

vector1 = Vector2D(5,10)
vector2 = Vector2D(10,15)
vector3 = Vector2D(15,20)
vector4 = Vector2D(20,25)
vector5 = Vector2D(25,30)
vector6 = Vector2D(30,35)
vector7 = Vector2D(35,40)
vector8 = Vector2D(40,45)
print(vector2.display())
print(vector4.add(vector3))
print(vector8.substr(vector1))
print(vector3.dotProd(vector7))
print(vector1.multByNumber(5))
print(vector1.modulus())
print(vector3.opposite())
print(vector1.rotate(3))
